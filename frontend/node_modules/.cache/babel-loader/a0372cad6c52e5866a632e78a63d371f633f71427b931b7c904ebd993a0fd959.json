{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Code Projects\\\\booking\\\\src\\\\calendar.jsx\",\n  _s = $RefreshSig$();\n// Calendar.js\nimport React, { useState } from 'react';\nimport { format, addMonths, subMonths, startOfMonth, startOfWeek, addDays, isSameMonth, isSameDay } from 'date-fns';\nimport { he } from 'date-fns/locale';\nimport SelectedDateComponent from './SelectedDateComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n  const nextMonth = () => setCurrentDate(addMonths(currentDate, 1));\n  const prevMonth = () => setCurrentDate(subMonths(currentDate, 1));\n  const startOfMonthDate = startOfMonth(currentDate);\n  const startOfWeekDate = startOfWeek(startOfMonthDate);\n  const calendar = [];\n  let day = startOfWeekDate;\n  const daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate(); // Get the total number of days in the month\n\n  while (isSameMonth(day, startOfMonthDate) || calendar.length * 7 < daysInMonth) {\n    const week = [];\n    let shouldAddWeek = true;\n    for (let i = 0; i < 7; i++) {\n      if (day.getDate() > daysInMonth) {\n        shouldAddWeek = false;\n        break;\n      }\n      week.push(day.getDate()); // Push the day number to the week array\n      day = addDays(day, 1);\n    }\n    if (shouldAddWeek) {\n      calendar.push(week);\n    } else {\n      break; // Stop adding weeks to the calendar\n    }\n  }\n\n  const handleDateClick = date => {\n    setSelectedDate(date);\n  };\n  const handleBack = () => {\n    setSelectedDate(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: selectedDate ? /*#__PURE__*/_jsxDEV(SelectedDateComponent, {\n      selectedDate: selectedDate,\n      onBack: handleBack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: prevMonth,\n          children: '<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: format(currentDate, 'MMMM yyyy', {\n            locale: he\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: nextMonth,\n          children: '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sat\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Fri\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Thu\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Wed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Tue\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Mon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Sun\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: calendar.map((week, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: week.reverse().map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n              className: isSameMonth(date, currentDate) ? 'currentMonth' : 'otherMonth',\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDateClick(date),\n                children: format(date, 'd')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this)\n            }, date.toString(), false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"vPYWgPxXiYe5mbjWAYj4vGXh074=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","format","addMonths","subMonths","startOfMonth","startOfWeek","addDays","isSameMonth","isSameDay","he","SelectedDateComponent","jsxDEV","_jsxDEV","Fragment","_Fragment","Calendar","_s","currentDate","setCurrentDate","Date","selectedDate","setSelectedDate","nextMonth","prevMonth","startOfMonthDate","startOfWeekDate","calendar","day","daysInMonth","getFullYear","getMonth","getDate","length","week","shouldAddWeek","i","push","handleDateClick","date","handleBack","children","onBack","fileName","_jsxFileName","lineNumber","columnNumber","onClick","locale","map","index","reverse","className","toString","_c","$RefreshReg$"],"sources":["D:/VS Code Projects/booking/src/calendar.jsx"],"sourcesContent":["// Calendar.js\r\nimport React, { useState } from 'react';\r\nimport { format, addMonths, subMonths, startOfMonth, startOfWeek, addDays, isSameMonth, isSameDay } from 'date-fns';\r\nimport { he } from 'date-fns/locale';\r\nimport SelectedDateComponent from './SelectedDateComponent';\r\n\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const nextMonth = () => setCurrentDate(addMonths(currentDate, 1));\r\n  const prevMonth = () => setCurrentDate(subMonths(currentDate, 1));\r\n\r\n  const startOfMonthDate = startOfMonth(currentDate);\r\n  const startOfWeekDate = startOfWeek(startOfMonthDate);\r\n\r\n  const calendar = [];\r\n  let day = startOfWeekDate;\r\n  const daysInMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0).getDate(); // Get the total number of days in the month\r\n  \r\n  while (isSameMonth(day, startOfMonthDate) || calendar.length * 7 < daysInMonth) {\r\n    const week = [];\r\n    let shouldAddWeek = true;\r\n  \r\n    for (let i = 0; i < 7; i++) {\r\n      if (day.getDate() > daysInMonth) {\r\n        shouldAddWeek = false;\r\n        break;\r\n      }\r\n  \r\n      week.push(day.getDate()); // Push the day number to the week array\r\n      day = addDays(day, 1);\r\n    }\r\n  \r\n    if (shouldAddWeek) {\r\n      calendar.push(week);\r\n    } else {\r\n      break; // Stop adding weeks to the calendar\r\n    }\r\n  }\r\n\r\n  const handleDateClick = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setSelectedDate(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {selectedDate ? (\r\n        <SelectedDateComponent selectedDate={selectedDate} onBack={handleBack} />\r\n      ) : (\r\n        <>\r\n          <div>\r\n            <button onClick={prevMonth}>{'<'}</button>\r\n            <h2>{format(currentDate, 'MMMM yyyy', { locale: he })}</h2>\r\n            <button onClick={nextMonth}>{'>'}</button>\r\n          </div>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Sat</th>\r\n                <th>Fri</th>\r\n                <th>Thu</th>\r\n                <th>Wed</th>\r\n                <th>Tue</th>\r\n                <th>Mon</th>\r\n                <th>Sun</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {calendar.map((week, index) => (\r\n                <tr key={index}>\r\n                  {week.reverse().map((date) => (\r\n                    <td key={date.toString()} className={isSameMonth(date, currentDate) ? 'currentMonth' : 'otherMonth'}>\r\n                      <button onClick={() => handleDateClick(date)}>\r\n                        {format(date, 'd')}\r\n                      </button>\r\n                    </td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,SAAS,EAAEC,SAAS,EAAEC,YAAY,EAAEC,WAAW,EAAEC,OAAO,EAAEC,WAAW,EAAEC,SAAS,QAAQ,UAAU;AACnH,SAASC,EAAE,QAAQ,iBAAiB;AACpC,OAAOC,qBAAqB,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAImB,IAAI,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMsB,SAAS,GAAGA,CAAA,KAAMJ,cAAc,CAAChB,SAAS,CAACe,WAAW,EAAE,CAAC,CAAC,CAAC;EACjE,MAAMM,SAAS,GAAGA,CAAA,KAAML,cAAc,CAACf,SAAS,CAACc,WAAW,EAAE,CAAC,CAAC,CAAC;EAEjE,MAAMO,gBAAgB,GAAGpB,YAAY,CAACa,WAAW,CAAC;EAClD,MAAMQ,eAAe,GAAGpB,WAAW,CAACmB,gBAAgB,CAAC;EAErD,MAAME,QAAQ,GAAG,EAAE;EACnB,IAAIC,GAAG,GAAGF,eAAe;EACzB,MAAMG,WAAW,GAAG,IAAIT,IAAI,CAACF,WAAW,CAACY,WAAW,CAAC,CAAC,EAAEZ,WAAW,CAACa,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC;;EAElG,OAAOxB,WAAW,CAACoB,GAAG,EAAEH,gBAAgB,CAAC,IAAIE,QAAQ,CAACM,MAAM,GAAG,CAAC,GAAGJ,WAAW,EAAE;IAC9E,MAAMK,IAAI,GAAG,EAAE;IACf,IAAIC,aAAa,GAAG,IAAI;IAExB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,IAAIR,GAAG,CAACI,OAAO,CAAC,CAAC,GAAGH,WAAW,EAAE;QAC/BM,aAAa,GAAG,KAAK;QACrB;MACF;MAEAD,IAAI,CAACG,IAAI,CAACT,GAAG,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1BJ,GAAG,GAAGrB,OAAO,CAACqB,GAAG,EAAE,CAAC,CAAC;IACvB;IAEA,IAAIO,aAAa,EAAE;MACjBR,QAAQ,CAACU,IAAI,CAACH,IAAI,CAAC;IACrB,CAAC,MAAM;MACL,MAAM,CAAC;IACT;EACF;;EAEA,MAAMI,eAAe,GAAIC,IAAI,IAAK;IAChCjB,eAAe,CAACiB,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBlB,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,oBACET,OAAA;IAAA4B,QAAA,EACGpB,YAAY,gBACXR,OAAA,CAACF,qBAAqB;MAACU,YAAY,EAAEA,YAAa;MAACqB,MAAM,EAAEF;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEzEjC,OAAA,CAAAE,SAAA;MAAA0B,QAAA,gBACE5B,OAAA;QAAA4B,QAAA,gBACE5B,OAAA;UAAQkC,OAAO,EAAEvB,SAAU;UAAAiB,QAAA,EAAE;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC1CjC,OAAA;UAAA4B,QAAA,EAAKvC,MAAM,CAACgB,WAAW,EAAE,WAAW,EAAE;YAAE8B,MAAM,EAAEtC;UAAG,CAAC;QAAC;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC3DjC,OAAA;UAAQkC,OAAO,EAAExB,SAAU;UAAAkB,QAAA,EAAE;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvC,CAAC,eACNjC,OAAA;QAAA4B,QAAA,gBACE5B,OAAA;UAAA4B,QAAA,eACE5B,OAAA;YAAA4B,QAAA,gBACE5B,OAAA;cAAA4B,QAAA,EAAI;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZjC,OAAA;cAAA4B,QAAA,EAAI;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZjC,OAAA;cAAA4B,QAAA,EAAI;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZjC,OAAA;cAAA4B,QAAA,EAAI;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZjC,OAAA;cAAA4B,QAAA,EAAI;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZjC,OAAA;cAAA4B,QAAA,EAAI;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACZjC,OAAA;cAAA4B,QAAA,EAAI;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACRjC,OAAA;UAAA4B,QAAA,EACGd,QAAQ,CAACsB,GAAG,CAAC,CAACf,IAAI,EAAEgB,KAAK,kBACxBrC,OAAA;YAAA4B,QAAA,EACGP,IAAI,CAACiB,OAAO,CAAC,CAAC,CAACF,GAAG,CAAEV,IAAI,iBACvB1B,OAAA;cAA0BuC,SAAS,EAAE5C,WAAW,CAAC+B,IAAI,EAAErB,WAAW,CAAC,GAAG,cAAc,GAAG,YAAa;cAAAuB,QAAA,eAClG5B,OAAA;gBAAQkC,OAAO,EAAEA,CAAA,KAAMT,eAAe,CAACC,IAAI,CAAE;gBAAAE,QAAA,EAC1CvC,MAAM,CAACqC,IAAI,EAAE,GAAG;cAAC;gBAAAI,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACZ;YAAC,GAHFP,IAAI,CAACc,QAAQ,CAAC,CAAC;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIpB,CACL;UAAC,GAPKI,KAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACR;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CApFID,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAsFd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}