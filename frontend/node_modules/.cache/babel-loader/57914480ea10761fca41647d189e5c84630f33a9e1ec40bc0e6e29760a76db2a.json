{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Code Projects\\\\booking\\\\src\\\\calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './alendar.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyCalendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [selectedDate, setSelectedDate] = useState(null);\n  const daysInMonth = date => new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\n  const generateDates = () => {\n    const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\n    const startingDayIndex = firstDay.getDay(); // 0 for Sunday, 1 for Monday, etc.\n    const totalDays = daysInMonth(currentDate);\n    const dates = [];\n\n    // Add days of the week starting from Sunday\n    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n    const reversedDaysOfWeek = daysOfWeek.slice().reverse();\n    for (let i = 0; i < 7; i++) {\n      dates.push(reversedDaysOfWeek[i]);\n    }\n\n    // Add empty cells for days before the start of the month\n    for (let i = 0; i < startingDayIndex; i++) {\n      dates.push(null);\n    }\n\n    // Add days of the month in reverse order\n    for (let i = totalDays; i >= 1; i--) {\n      dates.push(new Date(currentDate.getFullYear(), currentDate.getMonth(), i));\n    }\n    return dates;\n  };\n  const handlePrevMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1));\n  };\n  const handleNextMonth = () => {\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1));\n  };\n  const handleDateClick = date => {\n    setSelectedDate(date);\n  };\n  useEffect(() => {\n    // You can perform any additional actions when the month changes\n    console.log('Month changed:', currentDate.toLocaleString('default', {\n      month: 'long'\n    }));\n  }, [currentDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: currentDate.toLocaleString('default', {\n        month: 'long',\n        year: 'numeric'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handlePrevMonth,\n      children: \"Previous Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNextMonth,\n      children: \"Next Month\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: generateDates().reduce((rows, date, index) => {\n          if (index % 7 === 0) rows.push([]);\n          rows[rows.length - 1].push(date);\n          return rows;\n        }, []).map((week, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: week.map((date, colIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: date instanceof Date ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDateClick(date),\n              children: date.getDate()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this) : ''\n          }, colIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this)).reverse()\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), selectedDate && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected Date: \", selectedDate.toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(MyCalendar, \"eO/HceESn1gK9zGUfROlASmTNNM=\");\n_c = MyCalendar;\nexport default MyCalendar;\nvar _c;\n$RefreshReg$(_c, \"MyCalendar\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MyCalendar","_s","currentDate","setCurrentDate","Date","selectedDate","setSelectedDate","daysInMonth","date","getFullYear","getMonth","getDate","generateDates","firstDay","startingDayIndex","getDay","totalDays","dates","daysOfWeek","reversedDaysOfWeek","slice","reverse","i","push","handlePrevMonth","handleNextMonth","handleDateClick","console","log","toLocaleString","month","children","year","fileName","_jsxFileName","lineNumber","columnNumber","onClick","reduce","rows","index","length","map","week","rowIndex","colIndex","toLocaleDateString","_c","$RefreshReg$"],"sources":["D:/VS Code Projects/booking/src/calendar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './alendar.css'; // Import your CSS file for styling\r\n\r\nconst MyCalendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n\r\n  const daysInMonth = (date) => new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();\r\n\r\n  const generateDates = () => {\r\n    const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 1);\r\n    const startingDayIndex = firstDay.getDay(); // 0 for Sunday, 1 for Monday, etc.\r\n    const totalDays = daysInMonth(currentDate);\r\n    const dates = [];\r\n\r\n    // Add days of the week starting from Sunday\r\n    const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n    const reversedDaysOfWeek = daysOfWeek.slice().reverse();\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n      dates.push(reversedDaysOfWeek[i]);\r\n    }\r\n\r\n    // Add empty cells for days before the start of the month\r\n    for (let i = 0; i < startingDayIndex; i++) {\r\n      dates.push(null);\r\n    }\r\n\r\n    // Add days of the month in reverse order\r\n    for (let i = totalDays; i >= 1; i--) {\r\n      dates.push(new Date(currentDate.getFullYear(), currentDate.getMonth(), i));\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  const handlePrevMonth = () => {\r\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1));\r\n  };\r\n\r\n  const handleNextMonth = () => {\r\n    setCurrentDate(new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 1));\r\n  };\r\n\r\n  const handleDateClick = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // You can perform any additional actions when the month changes\r\n    console.log('Month changed:', currentDate.toLocaleString('default', { month: 'long' }));\r\n  }, [currentDate]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>{currentDate.toLocaleString('default', { month: 'long', year: 'numeric' })}</h2>\r\n      <button onClick={handlePrevMonth}>Previous Month</button>\r\n      <button onClick={handleNextMonth}>Next Month</button>\r\n      <table>\r\n        <tbody>\r\n          {generateDates().reduce((rows, date, index) => {\r\n            if (index % 7 === 0) rows.push([]);\r\n            rows[rows.length - 1].push(date);\r\n            return rows;\r\n          }, []).map((week, rowIndex) => (\r\n            <tr key={rowIndex}>\r\n              {week.map((date, colIndex) => (\r\n                <td key={colIndex}>\r\n                  {date instanceof Date ? (\r\n                    <button onClick={() => handleDateClick(date)}>\r\n                      {date.getDate()}\r\n                    </button>\r\n                  ) : ''}\r\n                </td>\r\n              )).reverse()}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      {selectedDate && (\r\n        <p>Selected Date: {selectedDate.toLocaleDateString()}</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyCalendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}