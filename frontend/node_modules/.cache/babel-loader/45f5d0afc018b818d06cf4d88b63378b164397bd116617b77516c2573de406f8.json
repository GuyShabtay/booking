{"ast":null,"code":"var _jsxFileName = \"D:\\\\VS Code Projects\\\\booking\\\\src\\\\calendar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { format, addMonths, subMonths, startOfMonth, startOfWeek, addDays, isSameMonth, isSameDay } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const nextMonth = () => setCurrentDate(addMonths(currentDate, 1));\n  const prevMonth = () => setCurrentDate(subMonths(currentDate, 1));\n  const startOfMonthDate = startOfMonth(currentDate);\n  const startOfWeekDate = startOfWeek(startOfMonthDate);\n  const calendar = [];\n  let day = startOfWeekDate;\n  while (day < addDays(startOfWeekDate, 7 * 6)) {\n    const week = [];\n    for (let i = 0; i < 7; i++) {\n      week.push(day);\n      day = addDays(day, 1);\n    }\n    calendar.push(week);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: prevMonth,\n        children: \"\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: format(currentDate, 'MMMM yyyy')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: nextMonth,\n        children: \"Next Month\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sun\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Mon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Wed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Thu\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Fri\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Sat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: calendar.map((week, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: week.map(date => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: isSameMonth(date, currentDate) ? 'currentMonth' : 'otherMonth',\n            children: format(date, 'd')\n          }, date.toString(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"jlRD8Xn8VFdQnzpYmYXrLX8M9Sw=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","format","addMonths","subMonths","startOfMonth","startOfWeek","addDays","isSameMonth","isSameDay","jsxDEV","_jsxDEV","Calendar","_s","currentDate","setCurrentDate","Date","nextMonth","prevMonth","startOfMonthDate","startOfWeekDate","calendar","day","week","i","push","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","date","className","toString","_c","$RefreshReg$"],"sources":["D:/VS Code Projects/booking/src/calendar.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { format, addMonths, subMonths, startOfMonth, startOfWeek, addDays, isSameMonth, isSameDay } from 'date-fns';\r\n\r\nconst Calendar = () => {\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  const nextMonth = () => setCurrentDate(addMonths(currentDate, 1));\r\n  const prevMonth = () => setCurrentDate(subMonths(currentDate, 1));\r\n\r\n  const startOfMonthDate = startOfMonth(currentDate);\r\n  const startOfWeekDate = startOfWeek(startOfMonthDate);\r\n\r\n  const calendar = [];\r\n  let day = startOfWeekDate;\r\n\r\n  while (day < addDays(startOfWeekDate, 7 * 6)) {\r\n    const week = [];\r\n    for (let i = 0; i < 7; i++) {\r\n      week.push(day);\r\n      day = addDays(day, 1);\r\n    }\r\n    calendar.push(week);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button onClick={prevMonth}>\"</button>\r\n        <h2>{format(currentDate, 'MMMM yyyy')}</h2>\r\n        <button onClick={nextMonth}>Next Month</button>\r\n      </div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Sun</th>\r\n            <th>Mon</th>\r\n            <th>Tue</th>\r\n            <th>Wed</th>\r\n            <th>Thu</th>\r\n            <th>Fri</th>\r\n            <th>Sat</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {calendar.map((week, index) => (\r\n            <tr key={index}>\r\n              {week.map((date) => (\r\n                <td key={date.toString()} className={isSameMonth(date, currentDate) ? 'currentMonth' : 'otherMonth'}>\r\n                  {format(date, 'd')}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}